# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.

# def sort_list(array):
#     if len(array) <= 1:
#         return array
#     else:
#         pivot = array[0]
#     less = [i for i in array[1:] if i <= pivot]
#     greater = [i for i in array[1:] if i > pivot]
#     return sort_list(less) + [pivot] + sort_list(greater)

from random import randint
print(list_1 := [randint(0, 20) for _ in range(5)])
print(list_2 := [randint(0, 20) for _ in range(5)])

# Вводить от руки, как указано в условии, мне было лень, заменил на рандом.

list_res = list(set(list_1 + list_2))
# list_res = sort_list(list_res)

# Сортировку закомментировал, чтобы номинально она всё-таки была, но фактически, после перевода списка во множество и обратно, результат выдаётся уже отсортированным.
# Вся программа уложилась в одну строчку, даже как-то неловко.

print(list_res)